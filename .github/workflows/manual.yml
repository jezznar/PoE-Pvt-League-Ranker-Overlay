# This is a basic workflow that is manually triggered

name: Github Builder

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: [pull_request]
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6,3.7,3.8,3.9]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install/Upgrade Python PIP
        run: python -m pip install --upgrade pip

      - name: Checkout current code
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Installing Dependencies
        uses: BSFishy/pip-action@v1
        with:
          requirements: requirements.txt
          upgrade: true

      - name: Running Unit Tests
        run: python -m pytest -vs --cov pplo

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 2
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Install/Upgrade Python PIP
        run: python -m pip install --upgrade pip

      - name: Checkout current code
        uses: actions/checkout@v2

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: x64

      - name: Installing Dependencies
        uses: BSFishy/pip-action@v1
        with:
          requirements: requirements.txt
          upgrade: true

      - name: Build Binaries - Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV
          ./bin/build

      - name: Build Binaries - Windows
        if: matrix.os == 'windows-latest'
        run: |
          set /p VERSION<=VERSION
          bin/build.cmd

      - name: Uploading Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: compiled-binaries-${{ matrix.os }}
          path: |
            dist